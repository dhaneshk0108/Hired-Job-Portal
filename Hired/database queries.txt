-- Generated by Oracle SQL Developer Data Modeler 4.0.3.853
--   at:        2015-05-12 00:40:06 IST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




CREATE TABLE CompanyDetails
  (
    Id                 INTEGER NOT NULL ,
    CompanyName        VARCHAR2 (20) ,
    CompanyDescription VARCHAR2 (100)
  ) ;
ALTER TABLE CompanyDetails ADD CONSTRAINT CompanyDetails_PK PRIMARY KEY ( Id ) ;

CREATE TABLE EmployerDetails
  (
    PersonId  INTEGER NOT NULL ,
    CompanyId INTEGER NOT NULL ,
    JobId     INTEGER NOT NULL
  ) ;

CREATE TABLE Guest
  (
    EmailId VARCHAR2 (20) ,
    JobId   INTEGER NOT NULL ,
    Resume ORDSYS.ORDDoc
  ) ;

CREATE TABLE JobDetails
  (
    Id            INTEGER NOT NULL ,
    JobTitle      VARCHAR2 (20) ,
    Location      VARCHAR2 (20) ,
    JobTypeId     INTEGER NOT NULL ,
    Description   VARCHAR2 (100) ,
    Vacancies     INTEGER ,
    Experience    VARCHAR2 (20) ,
    Salary        VARCHAR2 (20) ,
    StatusId      INTEGER NOT NULL ,
    JobPostedDate DATE
  ) ;
ALTER TABLE JobDetails ADD CONSTRAINT JobDetails_PK PRIMARY KEY ( Id ) ;

CREATE TABLE JobSeeker
  ( PersonId INTEGER NOT NULL , Resume ORDSYS.ORDDoc
  ) ;

CREATE TABLE JobStatus
  ( Id INTEGER NOT NULL , StatusType VARCHAR2 (20)
  ) ;
ALTER TABLE JobStatus ADD CONSTRAINT JobStatus_PK PRIMARY KEY ( Id ) ;

CREATE TABLE JobType
  ( Id INTEGER NOT NULL , Type VARCHAR2 (20)
  ) ;
ALTER TABLE JobType ADD CONSTRAINT JobType_PK PRIMARY KEY ( Id ) ;

CREATE TABLE JobsApplied
  (
    PersonId INTEGER NOT NULL ,
    JobId    INTEGER NOT NULL
  ) ;

CREATE TABLE Person
  (
    Id        INTEGER NOT NULL ,
    FirstName VARCHAR2 (20) ,
    LastName  VARCHAR2 (20) ,
    EmailId   VARCHAR2 (20) ,
    Password  VARCHAR2 (20)
  ) ;
ALTER TABLE Person ADD CONSTRAINT Person_PK PRIMARY KEY ( Id ) ;

CREATE TABLE Phone
  (
    PhoneId  INTEGER NOT NULL ,
    PersonId INTEGER NOT NULL ,
    "Number" INTEGER ,
    Prefered CHAR (1)
  ) ;
ALTER TABLE Phone ADD CONSTRAINT Phone_PK PRIMARY KEY ( PhoneId ) ;
ALTER TABLE Phone ADD CONSTRAINT Phone__UN UNIQUE ( PersonId , Prefered ) ;

ALTER TABLE EmployerDetails ADD CONSTRAINT EmployerDetails_JobDetails_FK FOREIGN KEY ( JobId ) REFERENCES JobDetails ( Id ) ;

ALTER TABLE EmployerDetails ADD CONSTRAINT EmployerDetails_Person_FK FOREIGN KEY ( PersonId ) REFERENCES Person ( Id ) ;

ALTER TABLE EmployerDetails ADD CONSTRAINT Employer_CompanyDetails_FK FOREIGN KEY ( CompanyId ) REFERENCES CompanyDetails ( Id ) ;

ALTER TABLE Guest ADD CONSTRAINT Guest_JobDetails_FK FOREIGN KEY ( JobId ) REFERENCES JobDetails ( Id ) ;

ALTER TABLE JobDetails ADD CONSTRAINT JobDetails_JobStatus_FK FOREIGN KEY ( StatusId ) REFERENCES JobStatus ( Id ) ;

ALTER TABLE JobDetails ADD CONSTRAINT JobDetails_JobType_FK FOREIGN KEY ( JobTypeId ) REFERENCES JobType ( Id ) ;

ALTER TABLE JobSeeker ADD CONSTRAINT JobSeeker_Person_FK FOREIGN KEY ( PersonId ) REFERENCES Person ( Id ) ;

ALTER TABLE JobsApplied ADD CONSTRAINT JobsApplied_JobDetails_FK FOREIGN KEY ( JobId ) REFERENCES JobDetails ( Id ) ;

ALTER TABLE JobsApplied ADD CONSTRAINT JobsApplied_Person_FK FOREIGN KEY ( PersonId ) REFERENCES Person ( Id ) ;

ALTER TABLE Phone ADD CONSTRAINT Phone_Person_FK FOREIGN KEY ( PersonId ) REFERENCES Person ( Id ) ;

CREATE SEQUENCE CompanyDetails_Id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER CompanyDetails_Id_TRG BEFORE
  INSERT ON CompanyDetails FOR EACH ROW WHEN (NEW.Id IS NULL) BEGIN :NEW.Id := CompanyDetails_Id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE JobDetails_Id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER JobDetails_Id_TRG BEFORE
  INSERT ON JobDetails FOR EACH ROW WHEN (NEW.Id IS NULL) BEGIN :NEW.Id := JobDetails_Id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE JobStatus_Id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER JobStatus_Id_TRG BEFORE
  INSERT ON JobStatus FOR EACH ROW WHEN (NEW.Id IS NULL) BEGIN :NEW.Id := JobStatus_Id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE JobType_Id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER JobType_Id_TRG BEFORE
  INSERT ON JobType FOR EACH ROW WHEN (NEW.Id IS NULL) BEGIN :NEW.Id := JobType_Id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Person_Id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Person_Id_TRG BEFORE
  INSERT ON Person FOR EACH ROW WHEN (NEW.Id IS NULL) BEGIN :NEW.Id := Person_Id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Phone_PhoneId_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Phone_PhoneId_TRG BEFORE
  INSERT ON Phone FOR EACH ROW WHEN (NEW.PhoneId IS NULL) BEGIN :NEW.PhoneId := Phone_PhoneId_SEQ.NEXTVAL;
END;
/


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            10
-- CREATE INDEX                             0
-- ALTER TABLE                             17
-- CREATE VIEW                              0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
